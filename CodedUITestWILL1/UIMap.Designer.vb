'------------------------------------------------------------------------------
'  <auto-generated>
'      This code was generated by coded UI test builder.
'      Version: 16.0.0.0
'
'      Changes to this file may cause incorrect behavior and will be lost if
'      the code is regenerated.
'  </auto-generated>
' ------------------------------------------------------------------------------

Imports System
Imports System.CodeDom.Compiler
Imports System.Collections.Generic
Imports System.Drawing
Imports System.Text.RegularExpressions
Imports System.Windows.Input
Imports Microsoft.VisualStudio.TestTools.UITest.Extension
Imports Microsoft.VisualStudio.TestTools.UITesting
Imports Microsoft.VisualStudio.TestTools.UITesting.WinControls
Imports Microsoft.VisualStudio.TestTools.UnitTesting
Imports Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard
Imports Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse
Imports MouseButtons = System.Windows.Forms.MouseButtons

Namespace CodedUITestWILL1
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Partial Public Class UIMap
        
        '''<summary>
        '''Application is ran from the very beginning (Registration) , all the way to to the latest added game.
        '''</summary>
        Public Sub RecordedApplicationEntireProcess()
            Dim uIOKButton As WinButton = Me.UIOKWindow.UIOKButton
            Dim uITxtNameEdit As WinEdit = Me.UIRegistrationWindow.UITxtNameWindow.UITxtNameEdit
            Dim uITxtSurnameEdit As WinEdit = Me.UIRegistrationWindow.UITxtSurnameWindow.UITxtSurnameEdit
            Dim uIDtpDOBDateTimePicker As WinDateTimePicker = Me.UIRegistrationWindow.UIDtpDOBWindow.UIDtpDOBDateTimePicker
            Dim uIParentsinformationGroup As WinGroup = Me.UIRegistrationWindow.UIParentsinformationWindow.UIParentsinformationGroup
            Dim uITxtNumberEdit As WinEdit = Me.UIRegistrationWindow.UITxtNumberWindow.UITxtNumberEdit
            Dim uITxtEmailEdit As WinEdit = Me.UIRegistrationWindow.UITxtEmailWindow.UITxtEmailEdit
            Dim uITxtUserEdit As WinEdit = Me.UIRegistrationWindow.UITxtUserWindow.UITxtUserEdit
            Dim uITxtPassEdit As WinEdit = Me.UIRegistrationWindow.UITxtPassWindow.UITxtPassEdit
            Dim uIREGISTERButton As WinButton = Me.UIRegistrationWindow.UIREGISTERWindow.UIREGISTERButton
            Dim uITxtCNameEdit As WinEdit = Me.UIRegistrationWindow.UITxtCNameWindow.UITxtCNameEdit
            Dim uIDtpCDOBDateTimePicker As WinDateTimePicker = Me.UIRegistrationWindow.UIDtpCDOBWindow.UIDtpCDOBDateTimePicker
            Dim uITxtCUserEdit As WinEdit = Me.UIRegistrationWindow.UITxtCUserWindow.UITxtCUserEdit
            Dim uITxtCPassEdit As WinEdit = Me.UIRegistrationWindow.UITxtCPassWindow.UITxtCPassEdit
            Dim uIREGISTERCHILDButton As WinButton = Me.UIRegistrationWindow.UIREGISTERCHILDWindow.UIREGISTERCHILDButton
            Dim uIBACKTOLOGINButton As WinButton = Me.UIRegistrationWindow.UIBACKTOLOGINWindow.UIBACKTOLOGINButton
            Dim uITxtNameEdit1 As WinEdit = Me.UIForm1Window.UITxtNameWindow.UITxtNameEdit
            Dim uITxtPassEdit1 As WinEdit = Me.UIForm1Window.UITxtPassWindow.UITxtPassEdit
            Dim uILOGINButton As WinButton = Me.UIForm1Window.UILOGINWindow.UILOGINButton
            Dim uIEasyMediumRadioButton As WinRadioButton = Me.UIStudentFormWindow.UIEasyMediumWindow.UIEasyMediumRadioButton
            Dim uIWELCOMEKGClient As WinClient = Me.UIStudentFormWindow.UIPictureBox5Window.UIWELCOMEKGClient
            Dim uIStartGameButton As WinButton = Me.UIShapesWindow.UIStartGameWindow.UIStartGameButton
            Dim uIItem00120Client As WinClient = Me.UIShapesWindow.UIPictureBox7Window.UIItem00120Client
            Dim uIItem00120Client1 As WinClient = Me.UIShapesWindow.UIPictureBox9Window.UIItem00120Client
            Dim uIItem00120Client2 As WinClient = Me.UIShapesWindow.UIPictureBox4Window.UIItem00120Client
            Dim uIItem00120Client3 As WinClient = Me.UIShapesWindow.UIPictureBox14Window.UIItem00120Client
            Dim uIItem00120Client4 As WinClient = Me.UIShapesWindow.UIPictureBox11Window.UIItem00120Client
            Dim uIButton1Button As WinButton = Me.UIShapesWindow.UIButton1Window.UIButton1Button
            Dim uIItem00120Client5 As WinClient = Me.UIShapesWindow.UIPictureBox15Window.UIItem00120Client
            Dim uIItem00120Client6 As WinClient = Me.UIShapesWindow.UIPictureBox6Window.UIItem00120Client
            Dim uIItem00120Client7 As WinClient = Me.UIShapesWindow.UIPictureBox5Window.UIItem00120Client
            Dim uIQuitButton As WinButton = Me.UIShapesWindow.UIQuitWindow.UIQuitButton
            Dim uIYesButton As WinButton = Me.UIShapesconcentrationgWindow.UIYesWindow.UIYesButton
            Dim uIWELCOMEKGClient1 As WinClient = Me.UIStudentFormWindow.UIPictureBox3Window.UIWELCOMEKGClient
            Dim uILearningnumbersButton As WinButton = Me.UINumbersWindow.UILearningnumbersWindow.UILearningnumbersButton
            Dim uIItem1Button As WinButton = Me.UINPage1Window.UIItem1Window.UIItem1Button
            Dim uIOKButton1 As WinButton = Me.UINPage1Window.UIOKWindow.UIOKButton
            Dim uIItem6Button As WinButton = Me.UINPage1Window.UIItem6Window.UIItem6Button
            Dim uIItem3Button As WinButton = Me.UINPage1Window.UIItem3Window.UIItem3Button
            Dim uIItem0Button As WinButton = Me.UINPage1Window.UIItem0Window.UIItem0Button
            Dim uIItem4Button As WinButton = Me.UINPage1Window.UIItem4Window.UIItem4Button
            Dim uINextButton As WinButton = Me.UINPage1Window.UINextWindow.UINextButton
            Dim uINumbersmenuButton As WinButton = Me.UINPage2Window.UINumbersmenuWindow.UINumbersmenuButton
            Dim uINumbersactivitiesButton As WinButton = Me.UINumbersWindow1.UINumbersactivitiesWindow.UINumbersactivitiesButton
            Dim uINumbersactivitiesButton1 As WinButton = Me.UINumbersWindow.UINumbersactivitiesWindow.UINumbersactivitiesButton
            Dim uITxtPassWindow As WinWindow = Me.UIForm1Window.UIForm1Client.UITxtPassWindow
            Dim uIPictureBox13Client As WinClient = Me.UIStudentFormWindow.UIPictureBox13Window.UIPictureBox13Client
            Dim uIWELCOMEKGClient2 As WinClient = Me.UIStudentFormWindow.UIPictureBox2Window.UIWELCOMEKGClient
            Dim uILearningcoloursButton As WinButton = Me.UIColoursWindow.UILearningcoloursWindow.UILearningcoloursButton
            Dim uIColoursButton As WinButton = Me.UILearningColoursWindow.UIColoursWindow.UIColoursButton
            Dim uIButton9Button As WinButton = Me.UICPage1Window.UIButton9Window.UIButton9Button
            Dim uIOKButton2 As WinButton = Me.UICPage1Window.UIOKWindow.UIOKButton
            Dim uIButton3Button As WinButton = Me.UICPage1Window.UIButton3Window.UIButton3Button
            Dim uIButton5Button As WinButton = Me.UICPage1Window.UIButton5Window.UIButton5Button
            Dim uIColoursButton1 As WinButton = Me.UICPage1Window.UIButton2Window.UIColoursButton
            Dim uIButton6Button As WinButton = Me.UICPage1Window.UIButton6Window.UIButton6Button
            Dim uIButton7Button As WinButton = Me.UICPage1Window.UIButton7Window.UIButton7Button
            Dim uIButton1Button1 As WinButton = Me.UICPage1Window.UIButton1Window.UIButton1Button
            Dim uINextButton1 As WinButton = Me.UICPage1Window.UINextWindow.UINextButton
            Dim uIButton2Button As WinButton = Me.UICPage2Window.UIButton2Window.UIButton2Button
            Dim uIButton4Button As WinButton = Me.UICPage2Window.UIButton4Window.UIButton4Button
            Dim uIButton3Button1 As WinButton = Me.UICPage2Window.UIButton3Window.UIButton3Button
            Dim uINextButton2 As WinButton = Me.UICPage2Window.UINextWindow.UINextButton
            Dim uIButton2Button1 As WinButton = Me.UICPage3Window.UIButton2Window.UIButton2Button
            Dim uILearningColoursButton1 As WinButton = Me.UICPage3Window.UILearningColoursWindow.UILearningColoursButton
            Dim uIColoursmenuButton As WinButton = Me.UILearningColoursWindow1.UIColoursmenuWindow.UIColoursmenuButton
            Dim uIMainmenuButton As WinButton = Me.UIColoursWindow1.UIMainmenuWindow.UIMainmenuButton
            Dim uILogoutButton As WinButton = Me.UIStudentFormWindow.UILogoutWindow.UILogoutButton

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(37, 9))

            'Type 'Bathabile' in 'txtName' text box
            uITxtNameEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtNameEditText

            'Type 'Maripane' in 'txtSurname' text box
            uITxtSurnameEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtSurnameEditText

            'Select '1998/01/20' in 'dtpDOB' date time picker
            uIDtpDOBDateTimePicker.DateTimeAsString = Me.RecordedApplicationEntireProcessParams.UIDtpDOBDateTimePickerDateTimeAsString

            'Click 'dtpDOB' date time picker
            Mouse.Click(uIDtpDOBDateTimePicker, New Point(112, 11))

            'Type 'July' in 'dtpDOB' date time picker
            Keyboard.SendKeys(uIDtpDOBDateTimePicker, Me.RecordedApplicationEntireProcessParams.UIDtpDOBDateTimePickerSendKeys, ModifierKeys.None)

            'Click 'dtpDOB' date time picker
            Mouse.Click(uIDtpDOBDateTimePicker, New Point(21, 10))

            'Move 'Parent's information' group
            Mouse.StartDragging(uIParentsinformationGroup, New Point(318, 196))
            Mouse.StopDragging(uIParentsinformationGroup, -6, -3)

            'Click 'txtNumber' text box
            Mouse.Click(uITxtNumberEdit, New Point(82, 14))

            'Click 'dtpDOB' date time picker
            Mouse.Click(uIDtpDOBDateTimePicker, New Point(108, 4))

            'Type 'Jufdg' in 'dtpDOB' date time picker
            Keyboard.SendKeys(uIDtpDOBDateTimePicker, Me.RecordedApplicationEntireProcessParams.UIDtpDOBDateTimePickerSendKeys1, ModifierKeys.None)

            'Click 'dtpDOB' date time picker
            Mouse.Click(uIDtpDOBDateTimePicker, New Point(108, 10))

            'Click 'dtpDOB' date time picker
            Mouse.Click(uIDtpDOBDateTimePicker, New Point(148, 5))

            'Click 'dtpDOB' date time picker
            Mouse.Click(uIDtpDOBDateTimePicker, New Point(105, 11))

            'Type '7' in 'dtpDOB' date time picker
            Keyboard.SendKeys(uIDtpDOBDateTimePicker, Me.RecordedApplicationEntireProcessParams.UIDtpDOBDateTimePickerSendKeys2, ModifierKeys.None)

            'Type '0619325904' in 'txtNumber' text box
            uITxtNumberEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtNumberEditText

            'Type 'bathabilemaripane@gmail.com' in 'txtEmail' text box
            uITxtEmailEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtEmailEditText

            'Type 'Bath98' in 'txtUser' text box
            uITxtUserEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtUserEditText

            'Click 'txtPass' text box
            Mouse.Click(uITxtPassEdit, New Point(44, 8))

            'Type '********' in 'txtPass' text box
            Keyboard.SendKeys(uITxtPassEdit, Me.RecordedApplicationEntireProcessParams.UITxtPassEditSendKeys, true)

            'Click 'REGISTER' button
            Mouse.Click(uIREGISTERButton, New Point(35, 27))

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(45, 12))

            'Type 'KG' in 'txtCName' text box
            uITxtCNameEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtCNameEditText

            'Select '2000/11/29' in 'dtpCDOB' date time picker
            uIDtpCDOBDateTimePicker.DateTimeAsString = Me.RecordedApplicationEntireProcessParams.UIDtpCDOBDateTimePickerDateTimeAsString

            'Type 'KG' in 'txtCUser' text box
            uITxtCUserEdit.Text = Me.RecordedApplicationEntireProcessParams.UITxtCUserEditText

            'Click 'txtCPass' text box
            Mouse.Click(uITxtCPassEdit, New Point(29, 11))

            'Type '********' in 'txtCPass' text box
            Keyboard.SendKeys(uITxtCPassEdit, Me.RecordedApplicationEntireProcessParams.UITxtCPassEditSendKeys, true)

            'Click 'REGISTER (CHILD)' button
            Mouse.Click(uIREGISTERCHILDButton, New Point(66, 16))

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(29, 7))

            'Click 'BACK TO LOGIN' button
            Mouse.Click(uIBACKTOLOGINButton, New Point(84, 15))

            'Type 'KG' in 'txtName' text box
            uITxtNameEdit1.Text = Me.RecordedApplicationEntireProcessParams.UITxtNameEditText1

            'Click 'txtPass' text box
            Mouse.Click(uITxtPassEdit1, New Point(137, 4))

            'Type '********' in 'txtPass' text box
            Keyboard.SendKeys(uITxtPassEdit1, Me.RecordedApplicationEntireProcessParams.UITxtPassEditSendKeys1, true)

            'Click 'LOGIN' button
            Mouse.Click(uILOGINButton, New Point(51, 10))

            'Select 'Easy-Medium' radio button
            uIEasyMediumRadioButton.Selected = Me.RecordedApplicationEntireProcessParams.UIEasyMediumRadioButtonSelected

            'Click 'WELCOME, KG' client
            Mouse.Click(uIWELCOMEKGClient, New Point(85, 67))

            'Click 'Start Game' button
            Mouse.Click(uIStartGameButton, New Point(22, 23))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client, New Point(56, 67))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client1, New Point(35, 57))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client2, New Point(54, 34))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client2, New Point(50, 69))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client3, New Point(65, 34))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client4, New Point(69, 53))

            'Click 'button1' button
            Mouse.Click(uIButton1Button, New Point(44, 7))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client5, New Point(37, 30))

            'Click 'Start Game' button
            Mouse.Click(uIStartGameButton, New Point(86, 28))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client6, New Point(23, 63))

            'Click '00:120' client
            Mouse.Click(uIItem00120Client7, New Point(56, 60))

            'Click 'Quit' button
            Mouse.Click(uIQuitButton, New Point(30, 21))

            'Click '&Yes' button
            Mouse.Click(uIYesButton, New Point(44, 8))

            'Select 'Easy-Medium' radio button
            uIEasyMediumRadioButton.Selected = Me.RecordedApplicationEntireProcessParams.UIEasyMediumRadioButtonSelected1

            'Click 'WELCOME, KG' client
            Mouse.Click(uIWELCOMEKGClient1, New Point(82, 85))

            'Click 'Learning numbers' button
            Mouse.Click(uILearningnumbersButton, New Point(47, 16))

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(17, 7))

            'Click '1' button
            Mouse.Click(uIItem1Button, New Point(47, 69))

            'Click 'OK' button
            Mouse.Click(uIOKButton1, New Point(56, 11))

            'Click '6' button
            Mouse.Click(uIItem6Button, New Point(50, 74))

            'Click 'OK' button
            Mouse.Click(uIOKButton1, New Point(62, 14))

            'Click '3' button
            Mouse.Click(uIItem3Button, New Point(87, 45))

            'Click 'OK' button
            Mouse.Click(uIOKButton1, New Point(70, 8))

            'Click '0' button
            Mouse.Click(uIItem0Button, New Point(83, 50))

            'Click 'OK' button
            Mouse.Click(uIOKButton1, New Point(91, 22))

            'Click '4' button
            Mouse.Click(uIItem4Button, New Point(105, 82))

            'Click 'OK' button
            Mouse.Click(uIOKButton1, New Point(39, 10))

            'Click 'Next' button
            Mouse.Click(uINextButton, New Point(44, 10))

            'Click 'Numbers menu' button
            Mouse.Click(uINumbersmenuButton, New Point(81, 25))

            'Click 'Numbers activities' button
            Mouse.Click(uINumbersactivitiesButton, New Point(64, 12))

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(52, 13))

            'Click 'BACK TO LOGIN' button
            Mouse.Click(uIBACKTOLOGINButton, New Point(53, 11))

            'Type 'KG' in 'txtName' text box
            uITxtNameEdit1.Text = Me.RecordedApplicationEntireProcessParams.UITxtNameEditText2

            'Click 'txtPass' text box
            Mouse.Click(uITxtPassEdit1, New Point(96, 6))

            'Type '********' in 'txtPass' text box
            Keyboard.SendKeys(uITxtPassEdit1, Me.RecordedApplicationEntireProcessParams.UITxtPassEditSendKeys2, true)

            'Click 'LOGIN' button
            Mouse.Click(uILOGINButton, New Point(31, 7))

            'Select 'Easy-Medium' radio button
            uIEasyMediumRadioButton.Selected = Me.RecordedApplicationEntireProcessParams.UIEasyMediumRadioButtonSelected2

            'Click 'WELCOME, KG' client
            Mouse.Click(uIWELCOMEKGClient1, New Point(71, 61))

            'Click 'Numbers activities' button
            Mouse.Click(uINumbersactivitiesButton1, New Point(81, 39))

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(35, 16))

            'Click 'BACK TO LOGIN' button
            Mouse.Click(uIBACKTOLOGINButton, New Point(53, 5))

            'Type 'KG' in 'txtName' text box
            uITxtNameEdit1.Text = Me.RecordedApplicationEntireProcessParams.UITxtNameEditText3

            'Click 'txtPass' window
            Mouse.Click(uITxtPassWindow, New Point(82, 18))

            'Click 'txtPass' text box
            Mouse.Click(uITxtPassEdit1, New Point(86, 8))

            'Type '********' in 'txtPass' text box
            Keyboard.SendKeys(uITxtPassEdit1, Me.RecordedApplicationEntireProcessParams.UITxtPassEditSendKeys3, true)

            'Click 'LOGIN' button
            Mouse.Click(uILOGINButton, New Point(56, 10))

            'Select 'Easy-Medium' radio button
            uIEasyMediumRadioButton.Selected = Me.RecordedApplicationEntireProcessParams.UIEasyMediumRadioButtonSelected3

            'Click 'pictureBox13' client
            Mouse.Click(uIPictureBox13Client, New Point(164, 114))

            'Click 'WELCOME, KG' client
            Mouse.Click(uIWELCOMEKGClient2, New Point(91, 67))

            'Click 'Learning colours' button
            Mouse.Click(uILearningcoloursButton, New Point(42, 25))

            'Click 'Colours' button
            Mouse.Click(uIColoursButton, New Point(80, 26))

            'Click 'button9' button
            Mouse.Click(uIButton9Button, New Point(51, 69))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(56, 20))

            'Click 'button3' button
            Mouse.Click(uIButton3Button, New Point(68, 69))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(56, 20))

            'Click 'button5' button
            Mouse.Click(uIButton5Button, New Point(113, 60))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(26, 21))

            'Click 'Colours' button
            Mouse.Click(uIColoursButton1, New Point(18, 57))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(58, 19))

            'Click 'button6' button
            Mouse.Click(uIButton6Button, New Point(124, 71))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(36, 4))

            'Click 'button7' button
            Mouse.Click(uIButton7Button, New Point(111, 64))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(45, 19))

            'Click 'button1' button
            Mouse.Click(uIButton1Button1, New Point(56, 46))

            'Click 'OK' button
            Mouse.Click(uIOKButton2, New Point(52, 17))

            'Click 'Next' button
            Mouse.Click(uINextButton1, New Point(16, 24))

            'Click 'button2' button
            Mouse.Click(uIButton2Button, New Point(96, 122))

            'Click 'button4' button
            Mouse.Click(uIButton4Button, New Point(137, 165))

            'Click 'button3' button
            Mouse.Click(uIButton3Button1, New Point(110, 155))

            'Click 'Next' button
            Mouse.Click(uINextButton2, New Point(87, 33))

            'Click 'button2' button
            Mouse.Click(uIButton2Button1, New Point(36, 142))

            'Click 'OK' button
            Mouse.Click(uIOKButton, New Point(56, 14))

            'Click 'Learning Colours' button
            Mouse.Click(uILearningColoursButton1, New Point(58, 19))

            'Click 'Colours menu' button
            Mouse.Click(uIColoursmenuButton, New Point(65, 14))

            'Click 'Main menu' button
            Mouse.Click(uIMainmenuButton, New Point(42, 22))

            'Click 'Logout' button
            Mouse.Click(uILogoutButton, New Point(76, 20))
        End Sub
        
        #Region "Properties"
        Public Overridable ReadOnly Property RecordedApplicationEntireProcessParams() As RecordedApplicationEntireProcessParams
            Get
                If (Me.mRecordedApplicationEntireProcessParams Is Nothing) Then
                    Me.mRecordedApplicationEntireProcessParams = New RecordedApplicationEntireProcessParams()
                End If
                Return Me.mRecordedApplicationEntireProcessParams
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow()
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        
        Public ReadOnly Property UIRegistrationWindow() As UIRegistrationWindow
            Get
                If (Me.mUIRegistrationWindow Is Nothing) Then
                    Me.mUIRegistrationWindow = New UIRegistrationWindow()
                End If
                Return Me.mUIRegistrationWindow
            End Get
        End Property
        
        Public ReadOnly Property UIForm1Window() As UIForm1Window
            Get
                If (Me.mUIForm1Window Is Nothing) Then
                    Me.mUIForm1Window = New UIForm1Window()
                End If
                Return Me.mUIForm1Window
            End Get
        End Property
        
        Public ReadOnly Property UIStudentFormWindow() As UIStudentFormWindow
            Get
                If (Me.mUIStudentFormWindow Is Nothing) Then
                    Me.mUIStudentFormWindow = New UIStudentFormWindow()
                End If
                Return Me.mUIStudentFormWindow
            End Get
        End Property
        
        Public ReadOnly Property UIShapesWindow() As UIShapesWindow
            Get
                If (Me.mUIShapesWindow Is Nothing) Then
                    Me.mUIShapesWindow = New UIShapesWindow()
                End If
                Return Me.mUIShapesWindow
            End Get
        End Property
        
        Public ReadOnly Property UIShapesconcentrationgWindow() As UIShapesconcentrationgWindow
            Get
                If (Me.mUIShapesconcentrationgWindow Is Nothing) Then
                    Me.mUIShapesconcentrationgWindow = New UIShapesconcentrationgWindow()
                End If
                Return Me.mUIShapesconcentrationgWindow
            End Get
        End Property
        
        Public ReadOnly Property UINumbersWindow() As UINumbersWindow
            Get
                If (Me.mUINumbersWindow Is Nothing) Then
                    Me.mUINumbersWindow = New UINumbersWindow()
                End If
                Return Me.mUINumbersWindow
            End Get
        End Property
        
        Public ReadOnly Property UINPage1Window() As UINPage1Window
            Get
                If (Me.mUINPage1Window Is Nothing) Then
                    Me.mUINPage1Window = New UINPage1Window()
                End If
                Return Me.mUINPage1Window
            End Get
        End Property
        
        Public ReadOnly Property UINPage2Window() As UINPage2Window
            Get
                If (Me.mUINPage2Window Is Nothing) Then
                    Me.mUINPage2Window = New UINPage2Window()
                End If
                Return Me.mUINPage2Window
            End Get
        End Property
        
        Public ReadOnly Property UINumbersWindow1() As UINumbersWindow1
            Get
                If (Me.mUINumbersWindow1 Is Nothing) Then
                    Me.mUINumbersWindow1 = New UINumbersWindow1()
                End If
                Return Me.mUINumbersWindow1
            End Get
        End Property
        
        Public ReadOnly Property UIColoursWindow() As UIColoursWindow
            Get
                If (Me.mUIColoursWindow Is Nothing) Then
                    Me.mUIColoursWindow = New UIColoursWindow()
                End If
                Return Me.mUIColoursWindow
            End Get
        End Property
        
        Public ReadOnly Property UILearningColoursWindow() As UILearningColoursWindow1
            Get
                If (Me.mUILearningColoursWindow Is Nothing) Then
                    Me.mUILearningColoursWindow = New UILearningColoursWindow1()
                End If
                Return Me.mUILearningColoursWindow
            End Get
        End Property
        
        Public ReadOnly Property UICPage1Window() As UICPage1Window
            Get
                If (Me.mUICPage1Window Is Nothing) Then
                    Me.mUICPage1Window = New UICPage1Window()
                End If
                Return Me.mUICPage1Window
            End Get
        End Property
        
        Public ReadOnly Property UICPage2Window() As UICPage2Window
            Get
                If (Me.mUICPage2Window Is Nothing) Then
                    Me.mUICPage2Window = New UICPage2Window()
                End If
                Return Me.mUICPage2Window
            End Get
        End Property
        
        Public ReadOnly Property UICPage3Window() As UICPage3Window
            Get
                If (Me.mUICPage3Window Is Nothing) Then
                    Me.mUICPage3Window = New UICPage3Window()
                End If
                Return Me.mUICPage3Window
            End Get
        End Property
        
        Public ReadOnly Property UILearningColoursWindow1() As UILearningColoursWindow11
            Get
                If (Me.mUILearningColoursWindow1 Is Nothing) Then
                    Me.mUILearningColoursWindow1 = New UILearningColoursWindow11()
                End If
                Return Me.mUILearningColoursWindow1
            End Get
        End Property
        
        Public ReadOnly Property UIColoursWindow1() As UIColoursWindow11
            Get
                If (Me.mUIColoursWindow1 Is Nothing) Then
                    Me.mUIColoursWindow1 = New UIColoursWindow11()
                End If
                Return Me.mUIColoursWindow1
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mRecordedApplicationEntireProcessParams As RecordedApplicationEntireProcessParams
        
        Private mUIOKWindow As UIOKWindow
        
        Private mUIRegistrationWindow As UIRegistrationWindow
        
        Private mUIForm1Window As UIForm1Window
        
        Private mUIStudentFormWindow As UIStudentFormWindow
        
        Private mUIShapesWindow As UIShapesWindow
        
        Private mUIShapesconcentrationgWindow As UIShapesconcentrationgWindow
        
        Private mUINumbersWindow As UINumbersWindow
        
        Private mUINPage1Window As UINPage1Window
        
        Private mUINPage2Window As UINPage2Window
        
        Private mUINumbersWindow1 As UINumbersWindow1
        
        Private mUIColoursWindow As UIColoursWindow
        
        Private mUILearningColoursWindow As UILearningColoursWindow1
        
        Private mUICPage1Window As UICPage1Window
        
        Private mUICPage2Window As UICPage2Window
        
        Private mUICPage3Window As UICPage3Window
        
        Private mUILearningColoursWindow1 As UILearningColoursWindow11
        
        Private mUIColoursWindow1 As UIColoursWindow11
        #End Region
    End Class
    
    '''<summary>
    '''Parameters to be passed into 'RecordedApplicationEntireProcess'
    '''</summary>
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class RecordedApplicationEntireProcessParams
        
        #Region "Fields"
        '''<summary>
        '''Type 'Bathabile' in 'txtName' text box
        '''</summary>
        Public UITxtNameEditText As String = "Bathabile"
        
        '''<summary>
        '''Type 'Maripane' in 'txtSurname' text box
        '''</summary>
        Public UITxtSurnameEditText As String = "Maripane"
        
        '''<summary>
        '''Select '1998/01/20' in 'dtpDOB' date time picker
        '''</summary>
        Public UIDtpDOBDateTimePickerDateTimeAsString As String = "20-Jan-1998"
        
        '''<summary>
        '''Type 'July' in 'dtpDOB' date time picker
        '''</summary>
        Public UIDtpDOBDateTimePickerSendKeys As String = "July"
        
        '''<summary>
        '''Type 'Jufdg' in 'dtpDOB' date time picker
        '''</summary>
        Public UIDtpDOBDateTimePickerSendKeys1 As String = "Jufdg"
        
        '''<summary>
        '''Type '7' in 'dtpDOB' date time picker
        '''</summary>
        Public UIDtpDOBDateTimePickerSendKeys2 As String = "7"
        
        '''<summary>
        '''Type '0619325904' in 'txtNumber' text box
        '''</summary>
        Public UITxtNumberEditText As String = "0619325904"
        
        '''<summary>
        '''Type 'bathabilemaripane@gmail.com' in 'txtEmail' text box
        '''</summary>
        Public UITxtEmailEditText As String = "bathabilemaripane@gmail.com"
        
        '''<summary>
        '''Type 'Bath98' in 'txtUser' text box
        '''</summary>
        Public UITxtUserEditText As String = "Bath98"
        
        '''<summary>
        '''Type '********' in 'txtPass' text box
        '''</summary>
        Public UITxtPassEditSendKeys As String = "dg09U69DWPSQJJgld11UNI+ufd5QQ3Ko"
        
        '''<summary>
        '''Type 'KG' in 'txtCName' text box
        '''</summary>
        Public UITxtCNameEditText As String = "KG"
        
        '''<summary>
        '''Select '2000/11/29' in 'dtpCDOB' date time picker
        '''</summary>
        Public UIDtpCDOBDateTimePickerDateTimeAsString As String = "29-Nov-2000"
        
        '''<summary>
        '''Type 'KG' in 'txtCUser' text box
        '''</summary>
        Public UITxtCUserEditText As String = "KG"
        
        '''<summary>
        '''Type '********' in 'txtCPass' text box
        '''</summary>
        Public UITxtCPassEditSendKeys As String = "UePO2iJCF+fQt11wGJBNSg=="
        
        '''<summary>
        '''Type 'KG' in 'txtName' text box
        '''</summary>
        Public UITxtNameEditText1 As String = "KG"
        
        '''<summary>
        '''Type '********' in 'txtPass' text box
        '''</summary>
        Public UITxtPassEditSendKeys1 As String = "UePO2iJCF+fQt11wGJBNSg=="
        
        '''<summary>
        '''Select 'Easy-Medium' radio button
        '''</summary>
        Public UIEasyMediumRadioButtonSelected As Boolean = true
        
        '''<summary>
        '''Select 'Easy-Medium' radio button
        '''</summary>
        Public UIEasyMediumRadioButtonSelected1 As Boolean = true
        
        '''<summary>
        '''Type 'KG' in 'txtName' text box
        '''</summary>
        Public UITxtNameEditText2 As String = "KG"
        
        '''<summary>
        '''Type '********' in 'txtPass' text box
        '''</summary>
        Public UITxtPassEditSendKeys2 As String = "UePO2iJCF+fQt11wGJBNSg=="
        
        '''<summary>
        '''Select 'Easy-Medium' radio button
        '''</summary>
        Public UIEasyMediumRadioButtonSelected2 As Boolean = true
        
        '''<summary>
        '''Type 'KG' in 'txtName' text box
        '''</summary>
        Public UITxtNameEditText3 As String = "KG"
        
        '''<summary>
        '''Type '********' in 'txtPass' text box
        '''</summary>
        Public UITxtPassEditSendKeys3 As String = "UePO2iJCF+fQt11wGJBNSg=="
        
        '''<summary>
        '''Select 'Easy-Medium' radio button
        '''</summary>
        Public UIEasyMediumRadioButtonSelected3 As Boolean = true
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIOKWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "OK"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "Button"
            Me.WindowTitles.Add("OK")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "OK"
                    Me.mUIOKButton.WindowTitles.Add("OK")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIRegistrationWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Registration"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtNameWindow() As UITxtNameWindow
            Get
                If (Me.mUITxtNameWindow Is Nothing) Then
                    Me.mUITxtNameWindow = New UITxtNameWindow(Me)
                End If
                Return Me.mUITxtNameWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtSurnameWindow() As UITxtSurnameWindow
            Get
                If (Me.mUITxtSurnameWindow Is Nothing) Then
                    Me.mUITxtSurnameWindow = New UITxtSurnameWindow(Me)
                End If
                Return Me.mUITxtSurnameWindow
            End Get
        End Property
        
        Public ReadOnly Property UIDtpDOBWindow() As UIDtpDOBWindow
            Get
                If (Me.mUIDtpDOBWindow Is Nothing) Then
                    Me.mUIDtpDOBWindow = New UIDtpDOBWindow(Me)
                End If
                Return Me.mUIDtpDOBWindow
            End Get
        End Property
        
        Public ReadOnly Property UIParentsinformationWindow() As UIParentsinformationWindow
            Get
                If (Me.mUIParentsinformationWindow Is Nothing) Then
                    Me.mUIParentsinformationWindow = New UIParentsinformationWindow(Me)
                End If
                Return Me.mUIParentsinformationWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtNumberWindow() As UITxtNumberWindow
            Get
                If (Me.mUITxtNumberWindow Is Nothing) Then
                    Me.mUITxtNumberWindow = New UITxtNumberWindow(Me)
                End If
                Return Me.mUITxtNumberWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtEmailWindow() As UITxtEmailWindow
            Get
                If (Me.mUITxtEmailWindow Is Nothing) Then
                    Me.mUITxtEmailWindow = New UITxtEmailWindow(Me)
                End If
                Return Me.mUITxtEmailWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtUserWindow() As UITxtUserWindow
            Get
                If (Me.mUITxtUserWindow Is Nothing) Then
                    Me.mUITxtUserWindow = New UITxtUserWindow(Me)
                End If
                Return Me.mUITxtUserWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtPassWindow() As UITxtPassWindow
            Get
                If (Me.mUITxtPassWindow Is Nothing) Then
                    Me.mUITxtPassWindow = New UITxtPassWindow(Me)
                End If
                Return Me.mUITxtPassWindow
            End Get
        End Property
        
        Public ReadOnly Property UIREGISTERWindow() As UIREGISTERWindow
            Get
                If (Me.mUIREGISTERWindow Is Nothing) Then
                    Me.mUIREGISTERWindow = New UIREGISTERWindow(Me)
                End If
                Return Me.mUIREGISTERWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtCNameWindow() As UITxtCNameWindow
            Get
                If (Me.mUITxtCNameWindow Is Nothing) Then
                    Me.mUITxtCNameWindow = New UITxtCNameWindow(Me)
                End If
                Return Me.mUITxtCNameWindow
            End Get
        End Property
        
        Public ReadOnly Property UIDtpCDOBWindow() As UIDtpCDOBWindow
            Get
                If (Me.mUIDtpCDOBWindow Is Nothing) Then
                    Me.mUIDtpCDOBWindow = New UIDtpCDOBWindow(Me)
                End If
                Return Me.mUIDtpCDOBWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtCUserWindow() As UITxtCUserWindow
            Get
                If (Me.mUITxtCUserWindow Is Nothing) Then
                    Me.mUITxtCUserWindow = New UITxtCUserWindow(Me)
                End If
                Return Me.mUITxtCUserWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtCPassWindow() As UITxtCPassWindow
            Get
                If (Me.mUITxtCPassWindow Is Nothing) Then
                    Me.mUITxtCPassWindow = New UITxtCPassWindow(Me)
                End If
                Return Me.mUITxtCPassWindow
            End Get
        End Property
        
        Public ReadOnly Property UIREGISTERCHILDWindow() As UIREGISTERCHILDWindow
            Get
                If (Me.mUIREGISTERCHILDWindow Is Nothing) Then
                    Me.mUIREGISTERCHILDWindow = New UIREGISTERCHILDWindow(Me)
                End If
                Return Me.mUIREGISTERCHILDWindow
            End Get
        End Property
        
        Public ReadOnly Property UIBACKTOLOGINWindow() As UIBACKTOLOGINWindow
            Get
                If (Me.mUIBACKTOLOGINWindow Is Nothing) Then
                    Me.mUIBACKTOLOGINWindow = New UIBACKTOLOGINWindow(Me)
                End If
                Return Me.mUIBACKTOLOGINWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtNameWindow As UITxtNameWindow
        
        Private mUITxtSurnameWindow As UITxtSurnameWindow
        
        Private mUIDtpDOBWindow As UIDtpDOBWindow
        
        Private mUIParentsinformationWindow As UIParentsinformationWindow
        
        Private mUITxtNumberWindow As UITxtNumberWindow
        
        Private mUITxtEmailWindow As UITxtEmailWindow
        
        Private mUITxtUserWindow As UITxtUserWindow
        
        Private mUITxtPassWindow As UITxtPassWindow
        
        Private mUIREGISTERWindow As UIREGISTERWindow
        
        Private mUITxtCNameWindow As UITxtCNameWindow
        
        Private mUIDtpCDOBWindow As UIDtpCDOBWindow
        
        Private mUITxtCUserWindow As UITxtCUserWindow
        
        Private mUITxtCPassWindow As UITxtCPassWindow
        
        Private mUIREGISTERCHILDWindow As UIREGISTERCHILDWindow
        
        Private mUIBACKTOLOGINWindow As UIBACKTOLOGINWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtNameWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtName"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtNameEdit() As WinEdit
            Get
                If (Me.mUITxtNameEdit Is Nothing) Then
                    Me.mUITxtNameEdit = New WinEdit(Me)
                    Me.mUITxtNameEdit.SearchProperties(WinEdit.PropertyNames.Name) = "SURNAME"
                    Me.mUITxtNameEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtNameEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtNameEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtSurnameWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtSurname"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtSurnameEdit() As WinEdit
            Get
                If (Me.mUITxtSurnameEdit Is Nothing) Then
                    Me.mUITxtSurnameEdit = New WinEdit(Me)
                    Me.mUITxtSurnameEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtSurnameEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtSurnameEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIDtpDOBWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "dtpDOB"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIDtpDOBDateTimePicker() As WinDateTimePicker
            Get
                If (Me.mUIDtpDOBDateTimePicker Is Nothing) Then
                    Me.mUIDtpDOBDateTimePicker = New WinDateTimePicker(Me)
                    Me.mUIDtpDOBDateTimePicker.WindowTitles.Add("Registration")
                End If
                Return Me.mUIDtpDOBDateTimePicker
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIDtpDOBDateTimePicker As WinDateTimePicker
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIParentsinformationWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "groupBox1"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIParentsinformationGroup() As WinGroup
            Get
                If (Me.mUIParentsinformationGroup Is Nothing) Then
                    Me.mUIParentsinformationGroup = New WinGroup(Me)
                    Me.mUIParentsinformationGroup.SearchProperties(WinControl.PropertyNames.Name) = " Parent's information"
                    Me.mUIParentsinformationGroup.WindowTitles.Add("Registration")
                End If
                Return Me.mUIParentsinformationGroup
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIParentsinformationGroup As WinGroup
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtNumberWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtNumber"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtNumberEdit() As WinEdit
            Get
                If (Me.mUITxtNumberEdit Is Nothing) Then
                    Me.mUITxtNumberEdit = New WinEdit(Me)
                    Me.mUITxtNumberEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtNumberEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtNumberEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtEmailWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtEmail"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtEmailEdit() As WinEdit
            Get
                If (Me.mUITxtEmailEdit Is Nothing) Then
                    Me.mUITxtEmailEdit = New WinEdit(Me)
                    Me.mUITxtEmailEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtEmailEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtEmailEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtUserWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtUser"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtUserEdit() As WinEdit
            Get
                If (Me.mUITxtUserEdit Is Nothing) Then
                    Me.mUITxtUserEdit = New WinEdit(Me)
                    Me.mUITxtUserEdit.SearchProperties(WinEdit.PropertyNames.Name) = "USERNAME"
                    Me.mUITxtUserEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtUserEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtUserEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtPassWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtPass"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtPassEdit() As WinEdit
            Get
                If (Me.mUITxtPassEdit Is Nothing) Then
                    Me.mUITxtPassEdit = New WinEdit(Me)
                    Me.mUITxtPassEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtPassEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtPassEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIREGISTERWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnRegister"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIREGISTERButton() As WinButton
            Get
                If (Me.mUIREGISTERButton Is Nothing) Then
                    Me.mUIREGISTERButton = New WinButton(Me)
                    Me.mUIREGISTERButton.SearchProperties(WinButton.PropertyNames.Name) = "REGISTER"
                    Me.mUIREGISTERButton.WindowTitles.Add("Registration")
                End If
                Return Me.mUIREGISTERButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIREGISTERButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtCNameWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtCName"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtCNameEdit() As WinEdit
            Get
                If (Me.mUITxtCNameEdit Is Nothing) Then
                    Me.mUITxtCNameEdit = New WinEdit(Me)
                    Me.mUITxtCNameEdit.SearchProperties(WinEdit.PropertyNames.Name) = "DATE OF BIRTH"
                    Me.mUITxtCNameEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtCNameEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtCNameEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIDtpCDOBWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "dtpCDOB"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIDtpCDOBDateTimePicker() As WinDateTimePicker
            Get
                If (Me.mUIDtpCDOBDateTimePicker Is Nothing) Then
                    Me.mUIDtpCDOBDateTimePicker = New WinDateTimePicker(Me)
                    Me.mUIDtpCDOBDateTimePicker.WindowTitles.Add("Registration")
                End If
                Return Me.mUIDtpCDOBDateTimePicker
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIDtpCDOBDateTimePicker As WinDateTimePicker
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtCUserWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtCUser"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtCUserEdit() As WinEdit
            Get
                If (Me.mUITxtCUserEdit Is Nothing) Then
                    Me.mUITxtCUserEdit = New WinEdit(Me)
                    Me.mUITxtCUserEdit.SearchProperties(WinEdit.PropertyNames.Name) = "USERNAME"
                    Me.mUITxtCUserEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtCUserEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtCUserEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtCPassWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtCPass"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtCPassEdit() As WinEdit
            Get
                If (Me.mUITxtCPassEdit Is Nothing) Then
                    Me.mUITxtCPassEdit = New WinEdit(Me)
                    Me.mUITxtCPassEdit.SearchProperties(WinEdit.PropertyNames.Name) = "PASSWORD"
                    Me.mUITxtCPassEdit.WindowTitles.Add("Registration")
                End If
                Return Me.mUITxtCPassEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtCPassEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIREGISTERCHILDWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIREGISTERCHILDButton() As WinButton
            Get
                If (Me.mUIREGISTERCHILDButton Is Nothing) Then
                    Me.mUIREGISTERCHILDButton = New WinButton(Me)
                    Me.mUIREGISTERCHILDButton.SearchProperties(WinButton.PropertyNames.Name) = "REGISTER (CHILD)"
                    Me.mUIREGISTERCHILDButton.WindowTitles.Add("Registration")
                End If
                Return Me.mUIREGISTERCHILDButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIREGISTERCHILDButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIBACKTOLOGINWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnBack"
            Me.WindowTitles.Add("Registration")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIBACKTOLOGINButton() As WinButton
            Get
                If (Me.mUIBACKTOLOGINButton Is Nothing) Then
                    Me.mUIBACKTOLOGINButton = New WinButton(Me)
                    Me.mUIBACKTOLOGINButton.SearchProperties(WinButton.PropertyNames.Name) = "BACK TO LOGIN"
                    Me.mUIBACKTOLOGINButton.WindowTitles.Add("Registration")
                End If
                Return Me.mUIBACKTOLOGINButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIBACKTOLOGINButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIForm1Window
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Form1"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Form1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtNameWindow() As UITxtNameWindow1
            Get
                If (Me.mUITxtNameWindow Is Nothing) Then
                    Me.mUITxtNameWindow = New UITxtNameWindow1(Me)
                End If
                Return Me.mUITxtNameWindow
            End Get
        End Property
        
        Public ReadOnly Property UITxtPassWindow() As UITxtPassWindow1
            Get
                If (Me.mUITxtPassWindow Is Nothing) Then
                    Me.mUITxtPassWindow = New UITxtPassWindow1(Me)
                End If
                Return Me.mUITxtPassWindow
            End Get
        End Property
        
        Public ReadOnly Property UILOGINWindow() As UILOGINWindow
            Get
                If (Me.mUILOGINWindow Is Nothing) Then
                    Me.mUILOGINWindow = New UILOGINWindow(Me)
                End If
                Return Me.mUILOGINWindow
            End Get
        End Property
        
        Public ReadOnly Property UIForm1Client() As UIForm1Client
            Get
                If (Me.mUIForm1Client Is Nothing) Then
                    Me.mUIForm1Client = New UIForm1Client(Me)
                End If
                Return Me.mUIForm1Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtNameWindow As UITxtNameWindow1
        
        Private mUITxtPassWindow As UITxtPassWindow1
        
        Private mUILOGINWindow As UILOGINWindow
        
        Private mUIForm1Client As UIForm1Client
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtNameWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtName"
            Me.WindowTitles.Add("Form1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtNameEdit() As WinEdit
            Get
                If (Me.mUITxtNameEdit Is Nothing) Then
                    Me.mUITxtNameEdit = New WinEdit(Me)
                    Me.mUITxtNameEdit.SearchProperties(WinEdit.PropertyNames.Name) = "WELCOME BACK"
                    Me.mUITxtNameEdit.WindowTitles.Add("Form1")
                End If
                Return Me.mUITxtNameEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtNameEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UITxtPassWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "txtPass"
            Me.WindowTitles.Add("Form1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtPassEdit() As WinEdit
            Get
                If (Me.mUITxtPassEdit Is Nothing) Then
                    Me.mUITxtPassEdit = New WinEdit(Me)
                    Me.mUITxtPassEdit.WindowTitles.Add("Form1")
                End If
                Return Me.mUITxtPassEdit
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtPassEdit As WinEdit
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILOGINWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("Form1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILOGINButton() As WinButton
            Get
                If (Me.mUILOGINButton Is Nothing) Then
                    Me.mUILOGINButton = New WinButton(Me)
                    Me.mUILOGINButton.SearchProperties(WinButton.PropertyNames.Name) = "LOGIN"
                    Me.mUILOGINButton.WindowTitles.Add("Form1")
                End If
                Return Me.mUILOGINButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILOGINButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIForm1Client
        Inherits WinClient
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinControl.PropertyNames.Name) = "Form1"
            Me.WindowTitles.Add("Form1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UITxtPassWindow() As WinWindow
            Get
                If (Me.mUITxtPassWindow Is Nothing) Then
                    Me.mUITxtPassWindow = New WinWindow(Me)
                    Me.mUITxtPassWindow.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains))
                    Me.mUITxtPassWindow.WindowTitles.Add("Form1")
                End If
                Return Me.mUITxtPassWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUITxtPassWindow As WinWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIStudentFormWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "StudentForm"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEasyMediumWindow() As UIEasyMediumWindow
            Get
                If (Me.mUIEasyMediumWindow Is Nothing) Then
                    Me.mUIEasyMediumWindow = New UIEasyMediumWindow(Me)
                End If
                Return Me.mUIEasyMediumWindow
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox5Window() As UIPictureBox5Window
            Get
                If (Me.mUIPictureBox5Window Is Nothing) Then
                    Me.mUIPictureBox5Window = New UIPictureBox5Window(Me)
                End If
                Return Me.mUIPictureBox5Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox3Window() As UIPictureBox3Window
            Get
                If (Me.mUIPictureBox3Window Is Nothing) Then
                    Me.mUIPictureBox3Window = New UIPictureBox3Window(Me)
                End If
                Return Me.mUIPictureBox3Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox13Window() As UIPictureBox13Window
            Get
                If (Me.mUIPictureBox13Window Is Nothing) Then
                    Me.mUIPictureBox13Window = New UIPictureBox13Window(Me)
                End If
                Return Me.mUIPictureBox13Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox2Window() As UIPictureBox2Window
            Get
                If (Me.mUIPictureBox2Window Is Nothing) Then
                    Me.mUIPictureBox2Window = New UIPictureBox2Window(Me)
                End If
                Return Me.mUIPictureBox2Window
            End Get
        End Property
        
        Public ReadOnly Property UILogoutWindow() As UILogoutWindow
            Get
                If (Me.mUILogoutWindow Is Nothing) Then
                    Me.mUILogoutWindow = New UILogoutWindow(Me)
                End If
                Return Me.mUILogoutWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEasyMediumWindow As UIEasyMediumWindow
        
        Private mUIPictureBox5Window As UIPictureBox5Window
        
        Private mUIPictureBox3Window As UIPictureBox3Window
        
        Private mUIPictureBox13Window As UIPictureBox13Window
        
        Private mUIPictureBox2Window As UIPictureBox2Window
        
        Private mUILogoutWindow As UILogoutWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIEasyMediumWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "radioButton1"
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIEasyMediumRadioButton() As WinRadioButton
            Get
                If (Me.mUIEasyMediumRadioButton Is Nothing) Then
                    Me.mUIEasyMediumRadioButton = New WinRadioButton(Me)
                    Me.mUIEasyMediumRadioButton.SearchProperties(WinRadioButton.PropertyNames.Name) = "Easy-Medium"
                    Me.mUIEasyMediumRadioButton.WindowTitles.Add("StudentForm")
                End If
                Return Me.mUIEasyMediumRadioButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIEasyMediumRadioButton As WinRadioButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox5Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox5"
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIWELCOMEKGClient() As WinClient
            Get
                If (Me.mUIWELCOMEKGClient Is Nothing) Then
                    Me.mUIWELCOMEKGClient = New WinClient(Me)
                    Me.mUIWELCOMEKGClient.SearchProperties(WinControl.PropertyNames.Name) = "WELCOME, KG"
                    Me.mUIWELCOMEKGClient.WindowTitles.Add("StudentForm")
                End If
                Return Me.mUIWELCOMEKGClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIWELCOMEKGClient As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox3Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox3"
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIWELCOMEKGClient() As WinClient
            Get
                If (Me.mUIWELCOMEKGClient Is Nothing) Then
                    Me.mUIWELCOMEKGClient = New WinClient(Me)
                    Me.mUIWELCOMEKGClient.SearchProperties(WinControl.PropertyNames.Name) = "WELCOME, KG"
                    Me.mUIWELCOMEKGClient.WindowTitles.Add("StudentForm")
                End If
                Return Me.mUIWELCOMEKGClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIWELCOMEKGClient As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox13Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox13"
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIPictureBox13Client() As WinClient
            Get
                If (Me.mUIPictureBox13Client Is Nothing) Then
                    Me.mUIPictureBox13Client = New WinClient(Me)
                    Me.mUIPictureBox13Client.WindowTitles.Add("StudentForm")
                End If
                Return Me.mUIPictureBox13Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIPictureBox13Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox2Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox2"
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIWELCOMEKGClient() As WinClient
            Get
                If (Me.mUIWELCOMEKGClient Is Nothing) Then
                    Me.mUIWELCOMEKGClient = New WinClient(Me)
                    Me.mUIWELCOMEKGClient.SearchProperties(WinControl.PropertyNames.Name) = "WELCOME, KG"
                    Me.mUIWELCOMEKGClient.WindowTitles.Add("StudentForm")
                End If
                Return Me.mUIWELCOMEKGClient
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIWELCOMEKGClient As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILogoutWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("StudentForm")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILogoutButton() As WinButton
            Get
                If (Me.mUILogoutButton Is Nothing) Then
                    Me.mUILogoutButton = New WinButton(Me)
                    Me.mUILogoutButton.SearchProperties(WinButton.PropertyNames.Name) = "Logout"
                    Me.mUILogoutButton.WindowTitles.Add("StudentForm")
                End If
                Return Me.mUILogoutButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILogoutButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIShapesWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Shapes"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIStartGameWindow() As UIStartGameWindow
            Get
                If (Me.mUIStartGameWindow Is Nothing) Then
                    Me.mUIStartGameWindow = New UIStartGameWindow(Me)
                End If
                Return Me.mUIStartGameWindow
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox7Window() As UIPictureBox7Window
            Get
                If (Me.mUIPictureBox7Window Is Nothing) Then
                    Me.mUIPictureBox7Window = New UIPictureBox7Window(Me)
                End If
                Return Me.mUIPictureBox7Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox9Window() As UIPictureBox9Window
            Get
                If (Me.mUIPictureBox9Window Is Nothing) Then
                    Me.mUIPictureBox9Window = New UIPictureBox9Window(Me)
                End If
                Return Me.mUIPictureBox9Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox4Window() As UIPictureBox4Window
            Get
                If (Me.mUIPictureBox4Window Is Nothing) Then
                    Me.mUIPictureBox4Window = New UIPictureBox4Window(Me)
                End If
                Return Me.mUIPictureBox4Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox14Window() As UIPictureBox14Window
            Get
                If (Me.mUIPictureBox14Window Is Nothing) Then
                    Me.mUIPictureBox14Window = New UIPictureBox14Window(Me)
                End If
                Return Me.mUIPictureBox14Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox11Window() As UIPictureBox11Window
            Get
                If (Me.mUIPictureBox11Window Is Nothing) Then
                    Me.mUIPictureBox11Window = New UIPictureBox11Window(Me)
                End If
                Return Me.mUIPictureBox11Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton1Window() As UIButton1Window
            Get
                If (Me.mUIButton1Window Is Nothing) Then
                    Me.mUIButton1Window = New UIButton1Window(Me)
                End If
                Return Me.mUIButton1Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox15Window() As UIPictureBox15Window
            Get
                If (Me.mUIPictureBox15Window Is Nothing) Then
                    Me.mUIPictureBox15Window = New UIPictureBox15Window(Me)
                End If
                Return Me.mUIPictureBox15Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox6Window() As UIPictureBox6Window
            Get
                If (Me.mUIPictureBox6Window Is Nothing) Then
                    Me.mUIPictureBox6Window = New UIPictureBox6Window(Me)
                End If
                Return Me.mUIPictureBox6Window
            End Get
        End Property
        
        Public ReadOnly Property UIPictureBox5Window() As UIPictureBox5Window1
            Get
                If (Me.mUIPictureBox5Window Is Nothing) Then
                    Me.mUIPictureBox5Window = New UIPictureBox5Window1(Me)
                End If
                Return Me.mUIPictureBox5Window
            End Get
        End Property
        
        Public ReadOnly Property UIQuitWindow() As UIQuitWindow
            Get
                If (Me.mUIQuitWindow Is Nothing) Then
                    Me.mUIQuitWindow = New UIQuitWindow(Me)
                End If
                Return Me.mUIQuitWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIStartGameWindow As UIStartGameWindow
        
        Private mUIPictureBox7Window As UIPictureBox7Window
        
        Private mUIPictureBox9Window As UIPictureBox9Window
        
        Private mUIPictureBox4Window As UIPictureBox4Window
        
        Private mUIPictureBox14Window As UIPictureBox14Window
        
        Private mUIPictureBox11Window As UIPictureBox11Window
        
        Private mUIButton1Window As UIButton1Window
        
        Private mUIPictureBox15Window As UIPictureBox15Window
        
        Private mUIPictureBox6Window As UIPictureBox6Window
        
        Private mUIPictureBox5Window As UIPictureBox5Window1
        
        Private mUIQuitWindow As UIQuitWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIStartGameWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnStartGame"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIStartGameButton() As WinButton
            Get
                If (Me.mUIStartGameButton Is Nothing) Then
                    Me.mUIStartGameButton = New WinButton(Me)
                    Me.mUIStartGameButton.SearchProperties(WinButton.PropertyNames.Name) = "Start Game"
                    Me.mUIStartGameButton.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIStartGameButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIStartGameButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox7Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox7"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox9Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox9"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox4Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox4"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox14Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox14"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox11Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox11"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton1Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton1Button() As WinButton
            Get
                If (Me.mUIButton1Button Is Nothing) Then
                    Me.mUIButton1Button = New WinButton(Me)
                    Me.mUIButton1Button.SearchProperties(WinButton.PropertyNames.Name) = "button1"
                    Me.mUIButton1Button.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIButton1Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton1Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox15Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox15"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox6Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox6"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIPictureBox5Window1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "pictureBox5"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem00120Client() As WinClient
            Get
                If (Me.mUIItem00120Client Is Nothing) Then
                    Me.mUIItem00120Client = New WinClient(Me)
                    Me.mUIItem00120Client.SearchProperties(WinControl.PropertyNames.Name) = "00:120"
                    Me.mUIItem00120Client.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIItem00120Client
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem00120Client As WinClient
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIQuitWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnQuit"
            Me.WindowTitles.Add("Shapes")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIQuitButton() As WinButton
            Get
                If (Me.mUIQuitButton Is Nothing) Then
                    Me.mUIQuitButton = New WinButton(Me)
                    Me.mUIQuitButton.SearchProperties(WinButton.PropertyNames.Name) = "Quit"
                    Me.mUIQuitButton.WindowTitles.Add("Shapes")
                End If
                Return Me.mUIQuitButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIQuitButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIShapesconcentrationgWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "shapes concentration game"
            Me.SearchProperties(WinWindow.PropertyNames.ClassName) = "#32770"
            Me.WindowTitles.Add("shapes concentration game")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIYesWindow() As UIYesWindow
            Get
                If (Me.mUIYesWindow Is Nothing) Then
                    Me.mUIYesWindow = New UIYesWindow(Me)
                End If
                Return Me.mUIYesWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIYesWindow As UIYesWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIYesWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlId) = "6"
            Me.WindowTitles.Add("shapes concentration game")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIYesButton() As WinButton
            Get
                If (Me.mUIYesButton Is Nothing) Then
                    Me.mUIYesButton = New WinButton(Me)
                    Me.mUIYesButton.SearchProperties(WinButton.PropertyNames.Name) = "Yes"
                    Me.mUIYesButton.WindowTitles.Add("shapes concentration game")
                End If
                Return Me.mUIYesButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIYesButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINumbersWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Numbers"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Numbers")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILearningnumbersWindow() As UILearningnumbersWindow
            Get
                If (Me.mUILearningnumbersWindow Is Nothing) Then
                    Me.mUILearningnumbersWindow = New UILearningnumbersWindow(Me)
                End If
                Return Me.mUILearningnumbersWindow
            End Get
        End Property
        
        Public ReadOnly Property UINumbersactivitiesWindow() As UINumbersactivitiesWindow
            Get
                If (Me.mUINumbersactivitiesWindow Is Nothing) Then
                    Me.mUINumbersactivitiesWindow = New UINumbersactivitiesWindow(Me)
                End If
                Return Me.mUINumbersactivitiesWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILearningnumbersWindow As UILearningnumbersWindow
        
        Private mUINumbersactivitiesWindow As UINumbersactivitiesWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILearningnumbersWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("Numbers")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILearningnumbersButton() As WinButton
            Get
                If (Me.mUILearningnumbersButton Is Nothing) Then
                    Me.mUILearningnumbersButton = New WinButton(Me)
                    Me.mUILearningnumbersButton.SearchProperties(WinButton.PropertyNames.Name) = "Learning numbers"
                    Me.mUILearningnumbersButton.WindowTitles.Add("Numbers")
                End If
                Return Me.mUILearningnumbersButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILearningnumbersButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINumbersactivitiesWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button2"
            Me.WindowTitles.Add("Numbers")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINumbersactivitiesButton() As WinButton
            Get
                If (Me.mUINumbersactivitiesButton Is Nothing) Then
                    Me.mUINumbersactivitiesButton = New WinButton(Me)
                    Me.mUINumbersactivitiesButton.SearchProperties(WinButton.PropertyNames.Name) = "Numbers activities"
                    Me.mUINumbersactivitiesButton.WindowTitles.Add("Numbers")
                End If
                Return Me.mUINumbersactivitiesButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINumbersactivitiesButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINPage1Window
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "NPage1"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem1Window() As UIItem1Window
            Get
                If (Me.mUIItem1Window Is Nothing) Then
                    Me.mUIItem1Window = New UIItem1Window(Me)
                End If
                Return Me.mUIItem1Window
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow1
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow1(Me)
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        
        Public ReadOnly Property UIItem6Window() As UIItem6Window
            Get
                If (Me.mUIItem6Window Is Nothing) Then
                    Me.mUIItem6Window = New UIItem6Window(Me)
                End If
                Return Me.mUIItem6Window
            End Get
        End Property
        
        Public ReadOnly Property UIItem3Window() As UIItem3Window
            Get
                If (Me.mUIItem3Window Is Nothing) Then
                    Me.mUIItem3Window = New UIItem3Window(Me)
                End If
                Return Me.mUIItem3Window
            End Get
        End Property
        
        Public ReadOnly Property UIItem0Window() As UIItem0Window
            Get
                If (Me.mUIItem0Window Is Nothing) Then
                    Me.mUIItem0Window = New UIItem0Window(Me)
                End If
                Return Me.mUIItem0Window
            End Get
        End Property
        
        Public ReadOnly Property UIItem4Window() As UIItem4Window
            Get
                If (Me.mUIItem4Window Is Nothing) Then
                    Me.mUIItem4Window = New UIItem4Window(Me)
                End If
                Return Me.mUIItem4Window
            End Get
        End Property
        
        Public ReadOnly Property UINextWindow() As UINextWindow
            Get
                If (Me.mUINextWindow Is Nothing) Then
                    Me.mUINextWindow = New UINextWindow(Me)
                End If
                Return Me.mUINextWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem1Window As UIItem1Window
        
        Private mUIOKWindow As UIOKWindow1
        
        Private mUIItem6Window As UIItem6Window
        
        Private mUIItem3Window As UIItem3Window
        
        Private mUIItem0Window As UIItem0Window
        
        Private mUIItem4Window As UIItem4Window
        
        Private mUINextWindow As UINextWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIItem1Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btn1"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem1Button() As WinButton
            Get
                If (Me.mUIItem1Button Is Nothing) Then
                    Me.mUIItem1Button = New WinButton(Me)
                    Me.mUIItem1Button.SearchProperties(WinButton.PropertyNames.Name) = "1"
                    Me.mUIItem1Button.WindowTitles.Add("NPage1")
                End If
                Return Me.mUIItem1Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem1Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIOKWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button3"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "OK"
                    Me.mUIOKButton.WindowTitles.Add("NPage1")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIItem6Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btn6"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem6Button() As WinButton
            Get
                If (Me.mUIItem6Button Is Nothing) Then
                    Me.mUIItem6Button = New WinButton(Me)
                    Me.mUIItem6Button.SearchProperties(WinButton.PropertyNames.Name) = "6"
                    Me.mUIItem6Button.WindowTitles.Add("NPage1")
                End If
                Return Me.mUIItem6Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem6Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIItem3Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btn3"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem3Button() As WinButton
            Get
                If (Me.mUIItem3Button Is Nothing) Then
                    Me.mUIItem3Button = New WinButton(Me)
                    Me.mUIItem3Button.SearchProperties(WinButton.PropertyNames.Name) = "3"
                    Me.mUIItem3Button.WindowTitles.Add("NPage1")
                End If
                Return Me.mUIItem3Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem3Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIItem0Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btn0"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem0Button() As WinButton
            Get
                If (Me.mUIItem0Button Is Nothing) Then
                    Me.mUIItem0Button = New WinButton(Me)
                    Me.mUIItem0Button.SearchProperties(WinButton.PropertyNames.Name) = "0"
                    Me.mUIItem0Button.WindowTitles.Add("NPage1")
                End If
                Return Me.mUIItem0Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem0Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIItem4Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btn4"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIItem4Button() As WinButton
            Get
                If (Me.mUIItem4Button Is Nothing) Then
                    Me.mUIItem4Button = New WinButton(Me)
                    Me.mUIItem4Button.SearchProperties(WinButton.PropertyNames.Name) = "4"
                    Me.mUIItem4Button.WindowTitles.Add("NPage1")
                End If
                Return Me.mUIItem4Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIItem4Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINextWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "btnPage2"
            Me.WindowTitles.Add("NPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINextButton() As WinButton
            Get
                If (Me.mUINextButton Is Nothing) Then
                    Me.mUINextButton = New WinButton(Me)
                    Me.mUINextButton.SearchProperties(WinButton.PropertyNames.Name) = "Next"
                    Me.mUINextButton.WindowTitles.Add("NPage1")
                End If
                Return Me.mUINextButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINextButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINPage2Window
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "NPage2"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("NPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINumbersmenuWindow() As UINumbersmenuWindow
            Get
                If (Me.mUINumbersmenuWindow Is Nothing) Then
                    Me.mUINumbersmenuWindow = New UINumbersmenuWindow(Me)
                End If
                Return Me.mUINumbersmenuWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINumbersmenuWindow As UINumbersmenuWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINumbersmenuWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button2"
            Me.WindowTitles.Add("NPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINumbersmenuButton() As WinButton
            Get
                If (Me.mUINumbersmenuButton Is Nothing) Then
                    Me.mUINumbersmenuButton = New WinButton(Me)
                    Me.mUINumbersmenuButton.SearchProperties(WinButton.PropertyNames.Name) = "Numbers menu"
                    Me.mUINumbersmenuButton.WindowTitles.Add("NPage2")
                End If
                Return Me.mUINumbersmenuButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINumbersmenuButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINumbersWindow1
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Numbers"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.FilterProperties(WinWindow.PropertyNames.OrderOfInvocation) = "2"
            Me.WindowTitles.Add("Numbers")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINumbersactivitiesWindow() As UINumbersactivitiesWindow1
            Get
                If (Me.mUINumbersactivitiesWindow Is Nothing) Then
                    Me.mUINumbersactivitiesWindow = New UINumbersactivitiesWindow1(Me)
                End If
                Return Me.mUINumbersactivitiesWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINumbersactivitiesWindow As UINumbersactivitiesWindow1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINumbersactivitiesWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button2"
            Me.WindowTitles.Add("Numbers")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINumbersactivitiesButton() As WinButton
            Get
                If (Me.mUINumbersactivitiesButton Is Nothing) Then
                    Me.mUINumbersactivitiesButton = New WinButton(Me)
                    Me.mUINumbersactivitiesButton.SearchProperties(WinButton.PropertyNames.Name) = "Numbers activities"
                    Me.mUINumbersactivitiesButton.WindowTitles.Add("Numbers")
                End If
                Return Me.mUINumbersactivitiesButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINumbersactivitiesButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIColoursWindow
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Colours"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("Colours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILearningcoloursWindow() As UILearningcoloursWindow
            Get
                If (Me.mUILearningcoloursWindow Is Nothing) Then
                    Me.mUILearningcoloursWindow = New UILearningcoloursWindow(Me)
                End If
                Return Me.mUILearningcoloursWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILearningcoloursWindow As UILearningcoloursWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILearningcoloursWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button4"
            Me.WindowTitles.Add("Colours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILearningcoloursButton() As WinButton
            Get
                If (Me.mUILearningcoloursButton Is Nothing) Then
                    Me.mUILearningcoloursButton = New WinButton(Me)
                    Me.mUILearningcoloursButton.SearchProperties(WinButton.PropertyNames.Name) = "Learning colours"
                    Me.mUILearningcoloursButton.WindowTitles.Add("Colours")
                End If
                Return Me.mUILearningcoloursButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILearningcoloursButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILearningColoursWindow1
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "LearningColours"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("LearningColours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIColoursWindow() As UIColoursWindow1
            Get
                If (Me.mUIColoursWindow Is Nothing) Then
                    Me.mUIColoursWindow = New UIColoursWindow1(Me)
                End If
                Return Me.mUIColoursWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIColoursWindow As UIColoursWindow1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIColoursWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button4"
            Me.WindowTitles.Add("LearningColours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIColoursButton() As WinButton
            Get
                If (Me.mUIColoursButton Is Nothing) Then
                    Me.mUIColoursButton = New WinButton(Me)
                    Me.mUIColoursButton.SearchProperties(WinButton.PropertyNames.Name) = "Colours"
                    Me.mUIColoursButton.WindowTitles.Add("LearningColours")
                End If
                Return Me.mUIColoursButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIColoursButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UICPage1Window
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "CPage1"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton9Window() As UIButton9Window
            Get
                If (Me.mUIButton9Window Is Nothing) Then
                    Me.mUIButton9Window = New UIButton9Window(Me)
                End If
                Return Me.mUIButton9Window
            End Get
        End Property
        
        Public ReadOnly Property UIOKWindow() As UIOKWindow2
            Get
                If (Me.mUIOKWindow Is Nothing) Then
                    Me.mUIOKWindow = New UIOKWindow2(Me)
                End If
                Return Me.mUIOKWindow
            End Get
        End Property
        
        Public ReadOnly Property UIButton3Window() As UIButton3Window
            Get
                If (Me.mUIButton3Window Is Nothing) Then
                    Me.mUIButton3Window = New UIButton3Window(Me)
                End If
                Return Me.mUIButton3Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton5Window() As UIButton5Window
            Get
                If (Me.mUIButton5Window Is Nothing) Then
                    Me.mUIButton5Window = New UIButton5Window(Me)
                End If
                Return Me.mUIButton5Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton2Window() As UIButton2Window
            Get
                If (Me.mUIButton2Window Is Nothing) Then
                    Me.mUIButton2Window = New UIButton2Window(Me)
                End If
                Return Me.mUIButton2Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton6Window() As UIButton6Window
            Get
                If (Me.mUIButton6Window Is Nothing) Then
                    Me.mUIButton6Window = New UIButton6Window(Me)
                End If
                Return Me.mUIButton6Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton7Window() As UIButton7Window
            Get
                If (Me.mUIButton7Window Is Nothing) Then
                    Me.mUIButton7Window = New UIButton7Window(Me)
                End If
                Return Me.mUIButton7Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton1Window() As UIButton1Window1
            Get
                If (Me.mUIButton1Window Is Nothing) Then
                    Me.mUIButton1Window = New UIButton1Window1(Me)
                End If
                Return Me.mUIButton1Window
            End Get
        End Property
        
        Public ReadOnly Property UINextWindow() As UINextWindow1
            Get
                If (Me.mUINextWindow Is Nothing) Then
                    Me.mUINextWindow = New UINextWindow1(Me)
                End If
                Return Me.mUINextWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton9Window As UIButton9Window
        
        Private mUIOKWindow As UIOKWindow2
        
        Private mUIButton3Window As UIButton3Window
        
        Private mUIButton5Window As UIButton5Window
        
        Private mUIButton2Window As UIButton2Window
        
        Private mUIButton6Window As UIButton6Window
        
        Private mUIButton7Window As UIButton7Window
        
        Private mUIButton1Window As UIButton1Window1
        
        Private mUINextWindow As UINextWindow1
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton9Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button9"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton9Button() As WinButton
            Get
                If (Me.mUIButton9Button Is Nothing) Then
                    Me.mUIButton9Button = New WinButton(Me)
                    Me.mUIButton9Button.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIButton9Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton9Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIOKWindow2
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button11"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIOKButton() As WinButton
            Get
                If (Me.mUIOKButton Is Nothing) Then
                    Me.mUIOKButton = New WinButton(Me)
                    Me.mUIOKButton.SearchProperties(WinButton.PropertyNames.Name) = "OK"
                    Me.mUIOKButton.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIOKButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIOKButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton3Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button3"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton3Button() As WinButton
            Get
                If (Me.mUIButton3Button Is Nothing) Then
                    Me.mUIButton3Button = New WinButton(Me)
                    Me.mUIButton3Button.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIButton3Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton3Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton5Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button5"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton5Button() As WinButton
            Get
                If (Me.mUIButton5Button Is Nothing) Then
                    Me.mUIButton5Button = New WinButton(Me)
                    Me.mUIButton5Button.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIButton5Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton5Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton2Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button2"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIColoursButton() As WinButton
            Get
                If (Me.mUIColoursButton Is Nothing) Then
                    Me.mUIColoursButton = New WinButton(Me)
                    Me.mUIColoursButton.SearchProperties(WinButton.PropertyNames.Name) = "Colours"
                    Me.mUIColoursButton.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIColoursButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIColoursButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton6Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button6"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton6Button() As WinButton
            Get
                If (Me.mUIButton6Button Is Nothing) Then
                    Me.mUIButton6Button = New WinButton(Me)
                    Me.mUIButton6Button.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIButton6Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton6Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton7Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button7"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton7Button() As WinButton
            Get
                If (Me.mUIButton7Button Is Nothing) Then
                    Me.mUIButton7Button = New WinButton(Me)
                    Me.mUIButton7Button.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIButton7Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton7Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton1Window1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton1Button() As WinButton
            Get
                If (Me.mUIButton1Button Is Nothing) Then
                    Me.mUIButton1Button = New WinButton(Me)
                    Me.mUIButton1Button.WindowTitles.Add("CPage1")
                End If
                Return Me.mUIButton1Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton1Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINextWindow1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button13"
            Me.WindowTitles.Add("CPage1")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINextButton() As WinButton
            Get
                If (Me.mUINextButton Is Nothing) Then
                    Me.mUINextButton = New WinButton(Me)
                    Me.mUINextButton.SearchProperties(WinButton.PropertyNames.Name) = "Next"
                    Me.mUINextButton.WindowTitles.Add("CPage1")
                End If
                Return Me.mUINextButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINextButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UICPage2Window
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "CPage2"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("CPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton2Window() As UIButton2Window1
            Get
                If (Me.mUIButton2Window Is Nothing) Then
                    Me.mUIButton2Window = New UIButton2Window1(Me)
                End If
                Return Me.mUIButton2Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton4Window() As UIButton4Window
            Get
                If (Me.mUIButton4Window Is Nothing) Then
                    Me.mUIButton4Window = New UIButton4Window(Me)
                End If
                Return Me.mUIButton4Window
            End Get
        End Property
        
        Public ReadOnly Property UIButton3Window() As UIButton3Window1
            Get
                If (Me.mUIButton3Window Is Nothing) Then
                    Me.mUIButton3Window = New UIButton3Window1(Me)
                End If
                Return Me.mUIButton3Window
            End Get
        End Property
        
        Public ReadOnly Property UINextWindow() As UINextWindow2
            Get
                If (Me.mUINextWindow Is Nothing) Then
                    Me.mUINextWindow = New UINextWindow2(Me)
                End If
                Return Me.mUINextWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton2Window As UIButton2Window1
        
        Private mUIButton4Window As UIButton4Window
        
        Private mUIButton3Window As UIButton3Window1
        
        Private mUINextWindow As UINextWindow2
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton2Window1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button2"
            Me.WindowTitles.Add("CPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton2Button() As WinButton
            Get
                If (Me.mUIButton2Button Is Nothing) Then
                    Me.mUIButton2Button = New WinButton(Me)
                    Me.mUIButton2Button.WindowTitles.Add("CPage2")
                End If
                Return Me.mUIButton2Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton2Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton4Window
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button4"
            Me.WindowTitles.Add("CPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton4Button() As WinButton
            Get
                If (Me.mUIButton4Button Is Nothing) Then
                    Me.mUIButton4Button = New WinButton(Me)
                    Me.mUIButton4Button.WindowTitles.Add("CPage2")
                End If
                Return Me.mUIButton4Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton4Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton3Window1
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button3"
            Me.WindowTitles.Add("CPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton3Button() As WinButton
            Get
                If (Me.mUIButton3Button Is Nothing) Then
                    Me.mUIButton3Button = New WinButton(Me)
                    Me.mUIButton3Button.WindowTitles.Add("CPage2")
                End If
                Return Me.mUIButton3Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton3Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UINextWindow2
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button1"
            Me.WindowTitles.Add("CPage2")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UINextButton() As WinButton
            Get
                If (Me.mUINextButton Is Nothing) Then
                    Me.mUINextButton = New WinButton(Me)
                    Me.mUINextButton.SearchProperties(WinButton.PropertyNames.Name) = "Next"
                    Me.mUINextButton.WindowTitles.Add("CPage2")
                End If
                Return Me.mUINextButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUINextButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UICPage3Window
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "CPage3"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.WindowTitles.Add("CPage3")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton2Window() As UIButton2Window2
            Get
                If (Me.mUIButton2Window Is Nothing) Then
                    Me.mUIButton2Window = New UIButton2Window2(Me)
                End If
                Return Me.mUIButton2Window
            End Get
        End Property
        
        Public ReadOnly Property UILearningColoursWindow() As UILearningColoursWindow2
            Get
                If (Me.mUILearningColoursWindow Is Nothing) Then
                    Me.mUILearningColoursWindow = New UILearningColoursWindow2(Me)
                End If
                Return Me.mUILearningColoursWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton2Window As UIButton2Window2
        
        Private mUILearningColoursWindow As UILearningColoursWindow2
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIButton2Window2
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button2"
            Me.WindowTitles.Add("CPage3")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIButton2Button() As WinButton
            Get
                If (Me.mUIButton2Button Is Nothing) Then
                    Me.mUIButton2Button = New WinButton(Me)
                    Me.mUIButton2Button.WindowTitles.Add("CPage3")
                End If
                Return Me.mUIButton2Button
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIButton2Button As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILearningColoursWindow2
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button12"
            Me.WindowTitles.Add("CPage3")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UILearningColoursButton() As WinButton
            Get
                If (Me.mUILearningColoursButton Is Nothing) Then
                    Me.mUILearningColoursButton = New WinButton(Me)
                    Me.mUILearningColoursButton.SearchProperties(WinButton.PropertyNames.Name) = "Learning Colours"
                    Me.mUILearningColoursButton.WindowTitles.Add("CPage3")
                End If
                Return Me.mUILearningColoursButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUILearningColoursButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UILearningColoursWindow11
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "LearningColours"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.FilterProperties(WinWindow.PropertyNames.OrderOfInvocation) = "2"
            Me.WindowTitles.Add("LearningColours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIColoursmenuWindow() As UIColoursmenuWindow
            Get
                If (Me.mUIColoursmenuWindow Is Nothing) Then
                    Me.mUIColoursmenuWindow = New UIColoursmenuWindow(Me)
                End If
                Return Me.mUIColoursmenuWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIColoursmenuWindow As UIColoursmenuWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIColoursmenuWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button3"
            Me.WindowTitles.Add("LearningColours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIColoursmenuButton() As WinButton
            Get
                If (Me.mUIColoursmenuButton Is Nothing) Then
                    Me.mUIColoursmenuButton = New WinButton(Me)
                    Me.mUIColoursmenuButton.SearchProperties(WinButton.PropertyNames.Name) = "Colours menu"
                    Me.mUIColoursmenuButton.WindowTitles.Add("LearningColours")
                End If
                Return Me.mUIColoursmenuButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIColoursmenuButton As WinButton
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIColoursWindow11
        Inherits WinWindow
        
        Public Sub New()
            MyBase.New
            Me.SearchProperties(WinWindow.PropertyNames.Name) = "Colours"
            Me.SearchProperties.Add(New PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains))
            Me.FilterProperties(WinWindow.PropertyNames.OrderOfInvocation) = "2"
            Me.WindowTitles.Add("Colours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIMainmenuWindow() As UIMainmenuWindow
            Get
                If (Me.mUIMainmenuWindow Is Nothing) Then
                    Me.mUIMainmenuWindow = New UIMainmenuWindow(Me)
                End If
                Return Me.mUIMainmenuWindow
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIMainmenuWindow As UIMainmenuWindow
        #End Region
    End Class
    
    <GeneratedCode("Coded UITest Builder", "16.0.29514.35")>  _
    Public Class UIMainmenuWindow
        Inherits WinWindow
        
        Public Sub New(ByVal searchLimitContainer As UITestControl)
            MyBase.New(searchLimitContainer)
            Me.SearchProperties(WinWindow.PropertyNames.ControlName) = "button3"
            Me.WindowTitles.Add("Colours")
        End Sub
        
        #Region "Properties"
        Public ReadOnly Property UIMainmenuButton() As WinButton
            Get
                If (Me.mUIMainmenuButton Is Nothing) Then
                    Me.mUIMainmenuButton = New WinButton(Me)
                    Me.mUIMainmenuButton.SearchProperties(WinButton.PropertyNames.Name) = "Main menu"
                    Me.mUIMainmenuButton.WindowTitles.Add("Colours")
                End If
                Return Me.mUIMainmenuButton
            End Get
        End Property
        #End Region
        
        #Region "Fields"
        Private mUIMainmenuButton As WinButton
        #End Region
    End Class
End Namespace
